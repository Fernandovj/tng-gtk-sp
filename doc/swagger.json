{
  "swagger": "2.0",
  "info": {
    "description": "5GTANGO, an H2020 5GPPP project",
    "version": "0.0.1",
    "title": "5GTANGO SP Gatekeeper component REST API",
    "termsOfService": "https://5gtango.eu/",
    "license": {
        "name": "Apache License 2.0",
        "url": "https://github.com/sonata-nfv/tng-gtk-common/blob/master/LICENSE"
    }
  },
  "host": "tng-gtk-sp:5000",
  "basePath": "/",
  "tags": [
      { "name": "root access", "description": "Gatekeeper Common API root access"},
      { "name": "requests management", "description": "Gatekeeper SP API requests (Life-cycle)"}
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["root access"],
        "summary": "Returns something usefull on access to root",
        "operationId": "returnRootAccess",
        "consumes": ["*/*"],
        "produces": ["text/html; charset=utf-8"],
        "parameters": [],
        "responses": {
          "200": { "description": "OK"}
        }
      }
    },
    "/pings": {
      "get": {
        "tags": ["pings"],
        "summary": "Returns time since started",
        "operationId": "returnPong",
        "consumes": ["*/*"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": { "description": "OK"}
        }
      }
    },
    "/requests": {
      "post": {
        "tags": ["requests management"],
        "summary": "Creates a request",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "uuid",
            "description": "The UUID of the entity to which the request is related to (Service or Slice)",
            "schema": {"$ref": "#/definitions/RequestData" }
          }
        ],
        "responses": {
           "201": { "description": "OK"},
          "400": {"description": "Bad Request"}
        }
      },
      "get": {
        "tags": ["requests management"],
        "summary": "Queries requests",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "id",
            "description": "The UUID of the request",
            "schema": {"$ref": "#/definitions/RequestResponseData" }
          }
        ],
        "responses": {
          "200": { "description": "OK"},
          "400": {"description": "Bad Request"},
          "404": {"description": "Not found"}
        }
      }
    }
  },
  "definitions": {
    "RequestData": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "The UUID of the entity to which the instantiation request is related to (Service or Slice) -- mandatory for request_type CREATE_SERVICE (default) and CREATE_SLICE (nstId)"
        },
        "instance_uuid": {
          "type": "string",
          "description": "The UUID of the instance of the entity to which the request is related to (Service or Slice) -- mandatory for request_type TERMINATE_SERVICE and TERMINATE_SLICE"
        },
        "egresses": {
          "type": "array",
          "description": "List of egress points to be taken into consideration during the instantiation",
          "items": {"type": "string"}
        },
        "ingresses": {
          "type": "array",
          "description": "List of ingress points to be taken into consideration during the instantiation",
          "items": {"type": "string"}
        },
        "blacklist": {
          "type": "array",
          "description": "List of sites where not to instantiate",
          "items": {"type": "string"}
        },
        "callback": {
          "type": "string",
          "description": "The callback to call when the instantiation is ready"
        },
        "name": {
          "type": "string",
          "description": "The callback to call when the instantiation is ready"
        },
        "description": {
          "type": "string",
          "description": "The callback to call when the instantiation is ready"
        },
        "sla_id": {
          "type": "string",
          "description": "The callback to call when the instantiation is ready"
        },
        "policy_id": {
          "type": "string",
          "description": "The callback to call when the instantiation is ready"
        }		
      }
    },
    "RequestResponseData":{
      "type": "object",
      "properties": {
        "blacklist": {
          "type": "array",
          "description": "List of sites where not to instantiate",
          "items": { "type": "string"}
        },
        "callback": {
          "type": "string",
          "description": "The callback to call when the request status changes"
        },
        "created_at": {
          "type": "string",
          "description": "The time at which the request has been created"
        },
        "customer_name": {
          "type": "string",
          "description": "The name of the Customer making the request"
        },
        "customer_email": {
          "type": "string",
          "description": "The email of the Customer making the request"
        },
		"description": {
          "type": "string",
          "description": "Free (optional) text describing the request"
        },
        "egresses": {
          "type": "array",
          "description": "List of egress points to be taken into consideration during the instantiation",
          "items": { "type": "string"}
        },
		"error": {
          "type": "string",
          "description": "Text describing the error ocurred in the request, if thre is any"
        },
        "id": {
          "type": "string",
          "description": "The ID of the request"
        }, 
        "ingresses": {
          "type": "array",
          "description": "List of ingress points to be taken into consideration during the instantiation",
          "items": {"type": "string"}
        },
        "instance_uuid": {
          "type": "string",
          "description": "The UUID of the instance of the entity to which the request is related to (Service or Slice) -- mandatory for TERMINATION"
        },
        "name": {
          "type": "string",
          "description": "The name of the request (optional)"
        },
		"nstId": {
          "type": "string",
          "description": "The UUID of the slice template to which the request is related to -- mandatory for CREATION"
        },
        "request_type": {
          "type": "string",
          "description": "The type of the request. Defaults to CREATE_SERVICE, but can also be TERMINATE_SERVICE, CREATE_SLICE or TERMINATE_SLICE"
        }, 
		"service_uuid": {
          "type": "string",
          "description": "The UUID of the service to which the request is related to -- mandatory for CREATION"
        },
        "sla_id": {
          "type": "string",
          "description": "The UUID of the SLA chosen by the customer"
        }, 
        "policy_id": {
          "type": "string",
          "description": "The UUID of the policy related to the above SLA UUID"
        },
        "status": {
          "type": "string",
          "description": "The status of the request: starts NEW, becomes INSTANTIATING or TERMINATING while the MANO does the work, and finishes either READY (success) or ERROR (fail)"
        },
        "updated_at": {
          "type": "string",
          "description": "The time at which the request has been updated"
        }
    }
  }
  }
}
