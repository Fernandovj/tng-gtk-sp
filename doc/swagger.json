{
  "swagger": "2.0",
  "info": {
    "description": "5GTANGO, an H2020 5GPPP project",
    "version": "0.0.1",
    "title": "5GTANGO SP Gatekeeper component REST API",
    "termsOfService": "https://5gtango.eu/",
    "license": {
        "name": "Apache License 2.0",
        "url": "https://github.com/sonata-nfv/tng-gtk-common/blob/master/LICENSE"
    }
  },
  "host": "tng-gtk-sp:5000",
  "basePath": "/",
  "tags": [
      { "name": "root access", "description": "Gatekeeper Common API root access"},
      { "name": "requests management", "description": "Gatekeeper SP API requests (Life-cycle)"}
  ],
  "paths": {
    "/": {
      "get": {
        "tags": ["root access"],
        "summary": "Returns something usefull on access to root",
        "operationId": "returnRootAccess",
        "consumes": ["*/*"],
        "produces": ["text/html; charset=utf-8"],
        "parameters": [],
        "responses": {
          "200": { "description": "OK"}
        }
      }
    },
    "/pings": {
      "get": {
        "tags": ["pings"],
        "summary": "Returns time since started",
        "operationId": "returnPong",
        "consumes": ["*/*"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": { "description": "OK"}
        }
      }
    },
    "/requests": {
      "post": {
          "summary": "Creates a request",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "request",
              "description": "The UUID of the entity to which the request is related to (Service or Slice)",
              "schema": {
                "$ref": "#/definitions/RequestData" 
              }
            }
          ],
          "responses": {
              "201": { "description": "OK"},
              "400": {"description": "Bad Request"}
          }
        }
    },
    "/services": {
      "get": {
        "tags": ["service management"],
        "summary": "Query services",
        "operationId": "serviceQuerying",
        "consumes": ["*/*"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records to be included in a page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The number of the page of records to be shown (starting in 0)",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "default": 0
          }
        ],
        "responses": {
            "200": { 
              "description": "OK",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ServicesGetMetadataReturn"
                }
              },
            },
            "400": {"description": "Bad Request"}
        }
      },
      "options": {
        "tags": ["service management"],
        "summary": "Options for services",
        "operationId": "serviceOptions",
        "consumes": ["*/*"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
            "200": { "description": "OK"},
            "400": {"description": "Bad Request"}
        }
      }
    },
    "/services/{service_uuid}": {
      "get": {
        "tags": ["service management"],
        "summary": "Query a specific service meta-data",
        "parameters": [
          {
            "name": "service_uuid",
            "in": "path",
            "description": "UUID of the service which meta-data is required",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "consumes": ["*/*"],
        "produces": ["application/json"],
        "responses": {
          "200": { 
            "description": "OK",
            "schema":{ "$ref":"#/definitions/ServicesGetMetadataReturn"}
          },
          "400": { "description": "Bad request"},
          "404": { "description": "Not found"}
        }
      }
    },
    "/functions": {
      "get": {
        "tags": ["function management"],
        "summary": "Query functions",
        "operationId": "functionQuerying",
        "consumes": ["*/*"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records to be included in a page",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "The number of the page of records to be shown (starting in 0)",
            "required": false,
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "default": 0
          }
        ],
        "responses": {
            "200": { 
              "description": "OK",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/FunctionsGetMetadataReturn"
                }
              },
            },
            "400": {"description": "Bad Request"}
        }
      },
      "options": {
        "tags": ["function management"],
        "summary": "Options for functions",
        "operationId": "functionOptions",
        "consumes": ["*/*"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
            "200": { "description": "OK"},
            "400": {"description": "Bad Request"}
        }
      }
    },
    "/functions/{function_uuid}": {
      "get": {
        "tags": ["function management"],
        "summary": "Query a specific function meta-data",
        "parameters": [
          {
            "name": "functionuuid",
            "in": "path",
            "description": "UUID of the function which meta-data is required",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "consumes": ["*/*"],
        "produces": ["application/json"],
        "responses": {
          "200": { 
            "description": "OK",
            "schema":{ "$ref":"#/definitions/FunctionsGetMetadataReturn"}
          },
          "400": { "description": "Bad request"},
          "404": { "description": "Not found"}
        }
      }
    }
  },
  "definitions": {
    "RequestData": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "The UUID of the entity to which the request is related to (Service or Slice) -- mandatory for CREATION"
        },
        "instance_uuid": {
          "type": "string",
          "description": "The UUID of the instance of the entity to which the request is related to (Service or Slice) -- mandatory for UPDATE and TERMINATION"
        },
        "egresses": {
          "type": "array",
          "description": "List of egress points to be taken into consideration during the instantiation",
          "items": {
            "type": "string"
          }
        },
        "ingresses": {
          "type": "array",
          "description": "List of ingress points to be taken into consideration during the instantiation",
          "items": {
            "type": "string"
          }
        },
        "blacklist": {
          "type": "array",
          "description": "List of sites where not to instantiate",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ServicesGetMetadataReturn": {
      "required": [ "service_uuid", "nsd" ],
      "properties": {
        "service_uuid": {
          "type": "string",
          "description": "UUID of the service."
        },
        "nsd": {
          "type": "string",
          "description": "Service descriptor"
        }
      },
      "type": "object"
    },
    "FunctionsGetMetadataReturn": {
      "required": [ "function_uuid", "vnfd" ],
      "properties": {
        "function_uuid": {
          "type": "string",
          "description": "UUID of the function."
        },
        "nsd": {
          "type": "string",
          "description": "Function descriptor"
        }
      },
      "type": "object"
    }
  }
}